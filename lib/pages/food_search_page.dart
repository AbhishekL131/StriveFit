import 'package:caltrack/pages/calorie_tracker_page.dart';
import 'package:flutter/material.dart';
import '../services/nutrition_service.dart';
import '../services/food_log_service.dart';
import '../models/food.dart';

class FoodSearchPage extends StatefulWidget {
  @override
  _FoodSearchPageState createState() => _FoodSearchPageState();
}

class _FoodSearchPageState extends State<FoodSearchPage> {
  final _nutritionService = NutritionService();
  final _foodLogService = FoodLogService();
  String query = '';
  List<dynamic> foodResults = [];

  Future<void> searchFood() async {
    final response = await _nutritionService.searchFood(query);
    setState(() {
      foodResults = response['foods'];
    });
  }

  void logFood(String name, String calories) {
    final food = Food(
      id: '', // ID will be auto-generated by Firebase upon insertion
      name: name,
      calories: calories, // Calories are already a string
      timestamp: DateTime.now().toIso8601String(), // Store timestamp as ISO8601 String
    );
    _foodLogService.logFood(food);
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('$name logged!')));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Color(0xFF003366),
        title: Text(
          'Search Food',
          style: TextStyle(
              color: Colors.white, fontSize: 25, fontWeight: FontWeight.bold),
        ),
      ),
      body: Column(
        children: [
          SizedBox(height: 20),
          Padding(
            padding: const EdgeInsets.all(10.0),
            child: TextField(
              decoration: InputDecoration(
                labelText: 'Search for food',
                focusedBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(15),
                    borderSide: BorderSide(color: Colors.blueAccent, width: 1)),
                enabledBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(15),
                    borderSide: BorderSide(color: Colors.grey, width: 1)),
                border: OutlineInputBorder(),
              ),
              onChanged: (value) {
                setState(() {
                  query = value;
                });
              },
            ),
          ),
          SizedBox(height: 20),
          Padding(
            padding: const EdgeInsets.all(10.0),
            child: Container(
              height: 45,
              width: double.infinity,
              child: ElevatedButton(
                onPressed: searchFood,
                child: Text(
                  'Search food',
                  style: TextStyle(color: Colors.white, fontSize: 20),
                ),
                style: ElevatedButton.styleFrom(backgroundColor: Colors.blue),
              ),
            ),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: foodResults.length,
              itemBuilder: (context, index) {
                final food = foodResults[index];
                return Padding(
                  padding: const EdgeInsets.all(15.0),
                  child: Container(
                    height: 70,
                    width: double.infinity,
                    decoration: BoxDecoration(
                      color: const Color.fromRGBO(245, 247, 249, 1),
                      borderRadius: BorderRadius.circular(15),
                    ),
                    child: ListTile(
                      title: Text(food['food_name']),
                      subtitle: Text('${food['nf_calories']} kcal'),
                      trailing: IconButton(
                        icon: Icon(Icons.add),
                        onPressed: () => logFood(
                          food['food_name'],
                          food['nf_calories'].toString(), // Ensure calories are stored as a string
                        ),
                      ),
                    ),
                  ),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}